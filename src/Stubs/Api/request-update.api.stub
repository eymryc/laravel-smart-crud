<?php

namespace {{ namespace }};

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class {{ class }} extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     */
    public function rules(): array
    {
        ${{ modelVariable }}Id = $this->route('{{ modelVariable }}');

        return [
            // TODO: Add your validation rules here
            // Example:
            // 'name' => 'sometimes|required|string|max:255',
            // 'email' => [
            //     'sometimes',
            //     'required',
            //     'email',
            //     Rule::unique('{{ modelPluralSnake }}', 'email')->ignore(${{ modelVariable }}Id),
            // ],
            // 'description' => 'nullable|string|max:1000',
            // 'status' => 'sometimes|required|in:active,inactive',
        ];
    }

    /**
     * Get custom messages for validator errors.
     */
    public function messages(): array
    {
        return [
            // TODO: Add your custom validation messages here
            // Example:
            // 'name.required' => 'The {{ modelLower }} name is required.',
            // 'email.unique' => 'This email is already taken.',
        ];
    }

    /**
     * Get custom attributes for validator errors.
     */
    public function attributes(): array
    {
        return [
            // TODO: Add your custom attribute names here
            // Example:
            // 'name' => '{{ modelLower }} name',
            // 'email' => 'email address',
        ];
    }

    /**
     * Prepare the data for validation.
     */
    protected function prepareForValidation(): void
    {
        // TODO: Add any data preparation logic here
        // Example:
        // if ($this->has('name')) {
        //     $this->merge([
        //         'slug' => Str::slug($this->name),
        //     ]);
        // }
    }
}